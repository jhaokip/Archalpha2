################### Create BTRFS Subvolumes ######################################
# This function creates btrfs subvolumes necessary to make Snapper work properly
###################################################################################
source cosmetics

function create_subvolumes () {

	mount UUID=$ROOT_UUID /mnt
	btrfs subvolume create /mnt/@
	btrfs subvolume create /mnt/@/.snapshots
	mkdir /mnt/@/.snapshots/1
	btrfs subvolume create /mnt/@/.snapshots/1/snapshot
	mkdir /mnt/@/boot
	btrfs subvolume create /mnt/@/boot/grub
	btrfs subvolume create /mnt/@/opt
	btrfs subvolume create /mnt/@/root
	btrfs subvolume create /mnt/@/srv
	btrfs subvolume create /mnt/@/tmp
	mkdir /mnt/@/usr
	btrfs subvolume create /mnt/@/usr/local
	mkdir /mnt/@/var
	btrfs subvolume create /mnt/@/var/cache
	btrfs subvolume create /mnt/@/var/log
	btrfs subvolume create /mnt/@/var/spool
	btrfs subvolume create /mnt/@/var/tmp
	Date=$(date +"%Y-%m-%d %H:%M:%S")
	touch /mnt/@/.snapshots/1/info.xml
	cat > /mnt/@/.snapshots/1/info.xml <<EOF
	<?xml version="1.0"?>
	<snapshot>
		<type>single</type>
		<num>1</num>
		<date>$Date</date>
		<description>First Root Filesystem Created at Installation</description>
	</snapshot>
EOF  ## Do NOT change EOF location

	btrfs subvolume set-default $(btrfs subvolume list /mnt | grep "@/.snapshots/1/snapshot" | grep -oP '(?<=ID )[0-9]+') /mnt

	btrfs quota enable /mnt
	chattr +C /mnt/@/var/cache
	chattr +C /mnt/@/var/log
	chattr +C /mnt/@/var/spool
	chattr +C /mnt/@/var/tmp

	umount /mnt
}
